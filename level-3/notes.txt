
In [2]: ELF("level-3")
[*] '/vagrant/level-3/level-3'
    Arch:     amd64-64-little
    RELRO:    Full RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      PIE enabled
    FORTIFY:  Enabled

# x64 calling convention
RDI, RSI, RDX, RCX, R8, R9

# global variable
char *executable_buffer_ptr;

# play_the_game - 0x970
char local_fh
int *local_10h

executable_buffer_ptr = mmap(0, 0x1000, 7, 0x22, i -1, 0)

printf("I have a pointer %p\n", executable_buffer_ptr)

while (true) {
	read(0, &local_fh, 1)
	// absolute arbitrary 1 byte write
	if (local_fh == 1) {
		read(0, &local_10h, 8)
		read(0, &local_fh, 1)
                *local_10h = local_fh

	// absolute arbitrary 1 byte leak
	} else if (local_fh == 2) {
		read(0, &local_10h, 8)
		write(1, local_10h, 1)

	} else {
		break;
        }
}


## dtors exploit attempt

# this occurs after we return from main and call __GI_exit()
Dump of assembler code for function __GI_exit:
=> 0x00007ffff7a6f980 <+0>:     lea    rsi,[rip+0x363c51]        # 0x7ffff7dd35d8 <__exit_funcs>
   0x00007ffff7a6f987 <+7>:     sub    rsp,0x8
   0x00007ffff7a6f98b <+11>:    mov    ecx,0x1
   0x00007ffff7a6f990 <+16>:    mov    edx,0x1
   0x00007ffff7a6f995 <+21>:    call   0x7ffff7a6f850 <__run_exit_handlers>
End of assembler dump.

##

## get environ location from libc to recalculate stack
## buffer
# x/xg 0x7ffff7dd5f38





